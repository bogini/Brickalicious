bricksviewer 0.0.9:
--------------
  -  Refactor BricksViewerApplication.java
    
  -  Add more bricks :)
  
  -  Add material attributes - transparent, metallic, etc.
  
  -  javadocs
  
  -  Improve Camera zoom
  
  -  Add error dialog instead of dumping errors to console


bricksviewer 0.0.7:
--------------
  -  Refactor BricksViewerApplication.java
    
  -  Add more bricks :)
  
  -  Add material attributes - transparent, metallic, etc.
  
  -  javadocs
  
  -  Improve Camera zoom
  
  -  Add context memory to file open dialog


bricksviewer 0.0.5:
--------------
  -  Refactor BricksViewerApplication.java
    
  -  Currently, brick models are loaded from XML at runtime and
     normals are calculated at that time.  Switch to calculating
     normals at build time and storing brick models in binary
     format as serialized objects.
  
  -  Add more bricks :)
  
  -  Add material attributes - transparent, metallic, etc.
  
  -  Work out applet design (big task due to native library issues)
  
  -  javadocs
  
  -  Improve Camera zoom
  
  -  Add context memory to file open dialog


bricksviewer 0.0.3:
--------------
  -  Currently, brick models are loaded from XML at runtime and
     normals are calculated at that time.  Switch to calculating
     normals at build time and storing brick models in binary
     format:
       MAGIC NUM
       VERTEX COUNT (int)
       VERTICES (float, float, float)
       NORMALS (float, float, float)
       TRIANGLE COUNT (int)
       TRIANGLES (int, int, int)
  
  -  Investigate lighter XML libraries for reading files.
  
  -  Add more bricks :)
  
  -  Add ability to step through instructions
  
  -  Add material attributes - transparent, metallic, etc.
  
  -  Work out applet design (big task due to native library issues)
  
  -  javadocs
  
  -  Improve Camera zoom
  
  -  Add memory to file open dialog
  
  
bricksviewer 0.0.1:
--------------
  -  Currently, brick models are loaded from XML at runtime and
     normals are calculated at that time.  Switch to calculating
     normals at build time and storing brick models in binary
     format:
       MAGIC NUM
       VERTEX COUNT (int)
       VERTICES (float, float, float)
       NORMALS (float, float, float)
       TRIANGLE COUNT (int)
       TRIANGLES (int, int, int)
  
  -  Investigate lighter XML libraries for reading files.
  
  -  Add functionality so any brick which appears more than n
     times in a scene is compiled using glGenLists.  Very quick
     research indicates that n should be somewhere between 5 & 10.
  
  -  Add more bricks :)
  
  -  Add ability to step through instructions
  
  -  Add material attributes - transparent, metallic, etc.
  
  -  Work out applet design (big task due to native library issues)

  -  javadocs
